# ================================
# PRODUCTION ENVIRONMENT TEMPLATE
# ================================
# Copy this file to .env for production deployment
# OR set these variables in your deployment platform (Vercel, Railway, etc.)
# CRITICAL: Never commit production secrets to version control

# ================================
# CORE APPLICATION SETTINGS
# ================================

# Application environment - MUST be production
NODE_ENV=production

# ================================
# AUTHENTICATION (BetterAuth)
# ================================

# BetterAuth secret key for JWT encryption and session management
# CRITICAL: Generate a new secret for production with: openssl rand -base64 32
# Must be at least 32 characters and kept absolutely secret
BETTER_AUTH_SECRET=your-production-better-auth-secret-key-here-min-32-chars

# Base URL where your application is deployed
# MUST be your actual production domain with HTTPS
# Example: https://your-app.com (no trailing slash)
BETTER_AUTH_URL=https://your-production-domain.com

# Trusted origins for CORS (comma-separated)
# Include all domains that should access your API
# Example: https://your-app.com,https://admin.your-app.com
BETTER_AUTH_TRUSTED_ORIGINS=https://your-production-domain.com

# ================================
# DATABASE CONFIGURATION
# ================================

# PostgreSQL connection string for production
# CRITICAL: Use managed database with SSL and connection pooling
# Example: postgresql://user:pass@db-host:5432/prod_db?sslmode=require&pgbouncer=true
DATABASE_URL=postgresql://username:password@production-host:5432/production_database?sslmode=require

# Direct database URL for Prisma migrations
# Required for some platforms like Vercel + PlanetScale
# Usually same as DATABASE_URL for PostgreSQL
# DIRECT_URL=postgresql://username:password@production-host:5432/production_database?sslmode=require

# ================================
# STRIPE PAYMENT INTEGRATION
# ================================

# Stripe Publishable Key for production (client-side, safe to expose)
# Get from: https://dashboard.stripe.com/apikeys
# MUST use live keys (pk_live_) for production
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_live_your_stripe_publishable_key_here

# Stripe Secret Key for production (server-side only, keep secure)
# CRITICAL: Never expose in client-side code or logs
# MUST use live keys (sk_live_) for production
STRIPE_SECRET_KEY=sk_live_your_stripe_secret_key_here

# Stripe Webhook Signing Secret (REQUIRED for production)
# Get from: Stripe Dashboard > Webhooks > [Your endpoint] > Signing secret
# CRITICAL: Required to verify webhook authenticity in production
STRIPE_WEBHOOK_SECRET=whsec_your_production_webhook_signing_secret_here

# ================================
# EMAIL SERVICE (RESEND)
# ================================

# Resend API Key for production transactional emails
# Get from: https://resend.com/api-keys
# REQUIRED for sending emails in production
RESEND_API_KEY=re_your_production_resend_api_key_here

# Default sender email address for production
# MUST be verified in your Resend account
# MUST use your production domain
# Format: "App Name <noreply@your-domain.com>"
RESEND_FROM_EMAIL="Your App <noreply@your-production-domain.com>"

# ================================
# APPLICATION CONFIGURATION
# ================================

# Application URL (used for redirects, webhooks, emails)
# MUST be your production domain with HTTPS
NEXT_PUBLIC_APP_URL=https://your-production-domain.com

# Application name (displayed in UI and emails)
NEXT_PUBLIC_APP_NAME=Your Production App Name

# ================================
# SECURITY & RATE LIMITING
# ================================

# Rate limiting configuration for production
# Stricter limits to prevent abuse
RATE_LIMIT_MAX_REQUESTS=60
RATE_LIMIT_WINDOW_MS=900000

# CSRF protection secret (recommended for production)
# Generate with: openssl rand -base64 32
CSRF_SECRET=your-production-csrf-secret-here

# ================================
# FEATURE FLAGS
# ================================

# Debug mode (MUST be false for production)
NEXT_PUBLIC_DEBUG_MODE=false

# Stripe test mode flag (MUST be false for production)
NEXT_PUBLIC_STRIPE_TEST_MODE=false

# ================================
# ANALYTICS & MONITORING
# ================================

# Google Analytics measurement ID (optional but recommended)
NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=G-YOUR_PRODUCTION_GA_ID

# PostHog analytics key (optional)
NEXT_PUBLIC_POSTHOG_KEY=phc_your_production_posthog_key

# Sentry DSN for error tracking (highly recommended for production)
NEXT_PUBLIC_SENTRY_DSN=https://your-production-sentry-dsn@sentry.io/project-id

# ================================
# PRODUCTION DEPLOYMENT CHECKLIST
# ================================

# Before deploying to production, ensure:
# âœ… All placeholder values above are replaced with real production credentials
# âœ… NODE_ENV is set to "production"
# âœ… Using live Stripe keys (pk_live_/sk_live_)
# âœ… Database is production-ready with SSL and backups
# âœ… Email service is configured with verified domain
# âœ… All secrets are unique and secure (not copied from development)
# âœ… Debug mode is disabled (NEXT_PUBLIC_DEBUG_MODE=false)
# âœ… HTTPS is enforced on your domain
# âœ… Environment variables are set in your deployment platform
# âœ… Webhook endpoints are configured in Stripe dashboard
# âœ… Error tracking and analytics are configured
# âœ… Rate limiting is appropriate for production traffic
# âœ… CORS origins are restricted to your production domains only

# ================================
# SECURITY REMINDERS
# ================================

# ðŸ”’ NEVER commit this file with real production secrets
# ðŸ”’ Use your deployment platform's secret management (Vercel, Railway, etc.)
# ðŸ”’ Rotate secrets regularly, especially after team member changes
# ðŸ”’ Use different secrets for staging and production environments
# ðŸ”’ Monitor access logs and set up alerts for suspicious activity
# ðŸ”’ Implement proper backup and disaster recovery procedures
# ðŸ”’ Regularly update dependencies and scan for vulnerabilities

# ================================
# COMMON DEPLOYMENT PLATFORMS
# ================================

# Vercel: Set environment variables in project dashboard
# Railway: Use railway CLI or web dashboard
# Heroku: Use heroku config:set commands
# AWS/GCP/Azure: Use platform-specific secret managers
# Docker: Use docker secrets or environment files (never in image)